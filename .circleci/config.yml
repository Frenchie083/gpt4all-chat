version: 2.1
orbs:
  win: circleci/windows@5.0
  python: circleci/python@1.2

jobs:
  build-linux:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y cmake build-essential
            pip install setuptools wheel cmake twine
      - run:
          name: Build C library
          command: |
            git submodule init
            git submodule update
            cd llmodel
            mkdir build
            cd build
            cmake ..
            cmake --build . --parallel

      - run:
          name: Build wheel
          command: |
            cd bindings/python/
            python setup.py bdist_wheel --plat-name=linux_x86_64
      - persist_to_workspace:
          root: bindings/python/dist/
          paths:
            - "*.whl"

  build-macos:
    macos:
      xcode: "14.2.0"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            brew install cmake
            pip install setuptools wheel cmake twine
      - run:
          name: Build C library
          command: |
            git submodule init
            git submodule update
            cd llmodel
            mkdir build
            cd build
            cmake .. -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
            cmake --build . --parallel
      - run:
          name: Build wheel
          command: |
            cd bindings/python
            python setup.py bdist_wheel --plat-name=macosx_10_9_universal2
      - persist_to_workspace:
          root: bindings/python/dist/
          paths:
            - "*.whl"

  build-windows:
    executor:
      name: win/default
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
      - run:
          name: Install Python dependencies
          command: pip install setuptools wheel cmake twine
      - run:
          name: Build wheel
          command: |
            cd bindings/python
            python setup.py bdist_wheel --plat-name=win_amd64
      - persist_to_workspace:
          root: bindings/python/dist/
          paths:
            - "*.whl"

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-linux
      - build-macos
      - build-windows